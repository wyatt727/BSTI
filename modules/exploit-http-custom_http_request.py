#!/usr/bin/env python3
# AUTHOR: Mitchell Kerns
# Description: Send and receive custom HTTP Requests. Just paste in the request you want to use in the "raw_request" block. Does not require any arguments.

import httpx
from urllib.parse import urlparse

# Example HTTP request (users can replace this with their own request)
raw_request = """\
GET / HTTP/2
Host: example.com
Cache-Control: max-age=0
Sec-Ch-Ua: 
Sec-Ch-Ua-Mobile: ?0
Sec-Ch-Ua-Platform: ""
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.5790.171 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Sec-Fetch-Site: none
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate
Accept-Language: en-US,en;q=0.9



"""

def parse_request(raw_request):
    lines = raw_request.strip().split('\n')
    method, path, _ = lines[0].split(' ')
    headers = {}
    body = ''
    i = 1

    # Extract headers
    while i < len(lines) and lines[i].strip() != '':
        header, value = lines[i].split(':', 1)
        headers[header.strip()] = value.strip()
        i += 1

    # Extract body
    if i < len(lines) and lines[i].strip() == '':
        body = '\n'.join(lines[i+1:])

    return method, 'https://' + headers['Host'] + path, headers, body

def send_request(method, url, headers, body):
    with httpx.Client(http2=True) as client:
        response = client.request(method, url, headers=headers, content=body)
        print(f"Status: {response.status_code}")
        print(f"Reason: {response.reason_phrase}")
        for key, value in response.headers.items():
            print(f"{key}: {value}")
        print(response.text)

# Main execution
if __name__ == "__main__":
    method, url, headers, body = parse_request(raw_request)
    send_request(method, url, headers, body)